swagger: '2.0'
info:
  title: API Documentation
  version: '1.0'
host: localhost:4500
schemes:
  - http
paths:
  /v1/users:
    get:
      summary: Obtener todos los usuarios
      description: Obtiene todos los usuarios.
      produces:
        - application/json
      responses:
        200:
          description: OK
    post:
      summary: Crear un nuevo usuario registrándose
      description: Crea un nuevo usuario.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: Datos del usuario
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
              registeredAt:
                type: string
              role:
                type: string
            example:
              username: Jorgiño32
              email: wills@example.com
              password: 12345S#
              registeredAt: '2024-02-05T12:00:00Z'
              role: user
      responses:
        200:
          description: OK
  /v1/users/{id}:
    get:
      summary: Obtener un usuario por su ID
      description: Obtiene un usuario por su ID.
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: OK
    delete:
      summary: Eliminar usuario por su ID
      description: Elimina un usuario por su ID.
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: OK
    patch:
      summary: Actualizar usuario por su ID
      description: Actualiza un usuario por su ID.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: user
          description: Datos del usuario a actualizar
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
              registeredAt:
                type: string
              role:
                type: string
            example:
              username: nuevo_nombre_de_usuario
              email: nuevo_email@example.com
              password: NuevaPassword123!
              registeredAt: '2024-02-05T12:00:00Z'
              role: admin
      responses:
        200:
          description: OK
  /v1/users/signIn:
    post:
      summary: Iniciar Sesión
      description: Inicia sesión con las credenciales del usuario.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: Credenciales del usuario
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            example:
              email: jorgi@example.com
              password: Password123!
      responses:
        200:
          description: OK
  /v1/videos/privates:
    get:
      summary: Obtener Videos Privados
      description: Obtiene videos privados solo si el usuario está autenticado.
      produces:
        - application/json
      parameters:
        - in: header
          name: x-access-token
          type: string
          required: true
      responses:
        200:
          description: OK
  /v1/videos:
    get:
      summary: Obtener todos los videos
      description: Obtiene todos los videos.
      produces:
        - application/json
      responses:
        200:
          description: OK
    post:
      summary: Crear un nuevo video
      description: Crea un nuevo video.
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: header
          name: x-access-token
          type: string
          required: true
        - in: formData
          name: title
          type: string
        - in: formData
          name: description
          type: string
        - in: formData
          name: credits
          type: string
        - in: formData
          name: publicationDate
          type: string
        - in: formData
          name: isPublic
          type: string
        - in: formData
          name: uploader
          type: string
        - in: formData
          name: year
          type: string
        - in: formData
          name: director
          type: string
        - in: formData
          name: duration
          type: string
        - in: formData
          name: rate
          type: string
        - in: formData
          name: poster
          type: string
        - in: formData
          name: genre
          type: string
        - in: formData
          name: url
          type: string
        - in: formData
          name: videoFile
          type: string
      responses:
        200:
          description: OK
  /v1/videos/{id}:
    get:
      summary: Obtener un video por su ID
      description: Obtiene un video por su ID.
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
      responses:
        200:
          description: OK
    delete:
      summary: Eliminar un video por su ID
      description: Elimina un video por su ID.
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: header
          name: x-access-token
          type: string
          required: true
      responses:
        200:
          description: OK
    patch:
      summary: Actualizar un video por su ID
      description: Actualiza un video por su ID.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: header
          name: x-access-token
          type: string
          required: true
        - in: body
          name: video
          description: Datos del video a actualizar
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              credits:
                type: string
              publicationDate:
                type: string
              isPublic:
                type: string
              year:
                type: string
              director:
                type: string
              duration:
                type: string
              rate:
                type: string
              poster:
                type: string
              genre:
                type: string
              url:
                type: string
            example:
              title: Nuevo título del video
              description: Nueva descripción del video
              credits: Nuevos créditos del video
              publicationDate: '2023-09-15T14:30:00Z'
              isPublic: true
              year: '2023'
              director: Nuevo director del video
              duration: '150'
              rate: '9'
              poster: https://example.com/new-video-poster.jpg
              genre: Action
              url: https://example.com/new-video-url
      responses:
        200:
          description: OK
