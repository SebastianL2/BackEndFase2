openapi: 3.0.1
info:
  title: API para gestion de Videos
  description: Esta API se encarga de manejar la información de videos
  version: 1.0.0
servers:
  - url: https://vercel.com/sebastianl2/back-end-fase2
tags:
  - name: clientes
    description: Maneja la información de los clientes de MoonTravels

paths:
  /:
    post:
      tags:
        - clientes
      summary: Inserta información de nuevo cliente en la base de datos
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyClientesPost'
        required: true
      responses:
        '200':
          description: (OK) La información del cliente se guardó correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoClientesPost'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /{idCliente}:
    get:
      tags:
        - clientes
      summary: Obtiene la información de la base de datos de un cliente.
      parameters:
        - $ref: '#/components/parameters/token'
        - name: idCliente
          in: path
          description: Identificador del cliente a obtener
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) La información del cliente se obtuvo correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoClientesGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /actualiza/{idCliente}:
    put:
      tags:
        - clientes
      summary: Actualiza la información de un cliente en la base de datos.
      parameters:
        - $ref: '#/components/parameters/token'
        - name: idCliente
          in: path
          description: Identificador del cliente a obtener
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyClientesPut'
      responses:
        '200':
          description: (OK) La información del cliente se actualizó correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoClientesPost'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /elimina/{idCliente}:
    delete:
      tags:
        - clientes
      summary: Elimina logicamente a un cliente.
      parameters:
        - $ref: '#/components/parameters/token'
        - name: idCliente
          in: path
          description: Identificador del cliente a obtener
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) El cliente se eliminó correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitoClientesPost'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  responses:
    Unauthorized:
      description: (Unauthorized) No hay autorización para llamar al servicio
    NotFound:
      description: (NotFound) No se encontró información
    BadRequest:
      description: (Bad Request) Los datos enviados son incorrectos o hay datos obligatorios no enviados
    ServerError:
      description: Error en servidor
  parameters:
    token:
      in: header
      name: token
      description: Token de autenticación en API.
      required: true
      schema:
        type: string
  schemas:
    BodyClientesPost:
      type: object
      properties:
        primer_nombre:
          type: string
          description: Primer nombre del cliente
        segundo_nombre:
          type: string
          description: Segundo nombre del cliente
        apellido_paterno:
          type: string
          description: Apellido paterno del cliente
        apellido_materno:
          type: string
          description: Apellido materno del cliente
        correo_electronico:
          type: string
          description: Email del cliente
    ExitoClientesPost:
      type: object
      properties:
        respuesta:
          type: integer
          enum: [1]
          description: Bandera que nos dice si la llamada al servicio fue satisfactoria
        idCliente:
          type: integer
          enum: [233]
          description: Id correspondiente al cliente
    ExitoClientesGet:
      type: object
      properties:
        respuesta:
          type: integer
          enum: [1]
          description: Bandera que nos dice si la llamada al servicio fue satisfactoria
        primer_nombre:
          type: string
          description: Primer nombre del cliente
        segundo_nombre:
          type: string
          description: Segundo nombre del cliente
        apellido_paterno:
          type: string
          description: Apellido paterno del cliente
        apellido_materno:
          type: string
          description: Apellido materno del cliente
        correo_electronico:
          type: string
          description: Email del cliente
        contrasenia:
          type: string
          description: Contraseña de ingreso al sistema del cliente
    BodyClientesPut:
      type: object
      properties:
        primer_nombre:
          type: string
          description: Primer nombre del cliente
        segundo_nombre:
          type: string
          description: Segundo nombre del cliente
        apellido_paterno:
          type: string
          description: Apellido paterno del cliente
        apellido_materno:
          type: string
          description: Apellido materno del cliente
        correo_electronico:
          type: string
          description: Email del cliente
  
